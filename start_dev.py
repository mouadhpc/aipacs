#!/usr/bin/env python3
"""
Script de d√©marrage pour le d√©veloppement AI PACS
Lance l'application en mode d√©veloppement sans Docker
"""

import sys
import os
import logging
from pathlib import Path
from multiprocessing import freeze_support

if __name__ == "__main__":
    freeze_support()
    
    # Ajout du r√©pertoire src au path
    project_root = Path(__file__).parent
    sys.path.insert(0, str(project_root / "src"))
    
    # Configuration de base
    os.environ.setdefault("DEBUG", "true")
    os.environ.setdefault("LOG_LEVEL", "DEBUG")
    os.environ.setdefault("API_HOST", "127.0.0.1")
    os.environ.setdefault("API_PORT", "8000")
    
    # Configuration simplifi√©e pour d√©veloppement
    os.environ.setdefault("DATABASE_URL", "sqlite:///./ai_pacs_dev.db")
    os.environ.setdefault("DICOM_AE_TITLE", "IA_SERVER")
    os.environ.setdefault("DICOM_PORT", "11112")
    os.environ.setdefault("PACS_HOST", "localhost")
    os.environ.setdefault("PACS_PORT", "11111")

    print("üöÄ D√©marrage AI PACS - Mode D√©veloppement")
    print("=" * 50)
    
    try:
        # Import et configuration
        import uvicorn
        
        # Cr√©ation des r√©pertoires n√©cessaires
        for directory in ["data", "temp", "logs", "templates/reports"]:
            Path(directory).mkdir(parents=True, exist_ok=True)
            print(f"‚úÖ R√©pertoire cr√©√© : {directory}")
        
        # Configuration logging
        logging.basicConfig(
            level=logging.INFO,
            format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
        )
        
        print("\nüîß Configuration:")
        print(f"   - API: http://127.0.0.1:8000")
        print(f"   - API Docs: http://127.0.0.1:8000/api/v1/docs")
        print(f"   - Debug Mode: ON")
        print(f"   - Database: SQLite (dev)")
        print(f"   - DICOM Server: localhost:11112")
        
        print("\nüéØ Fonctionnalit√©s disponibles:")
        print("   ‚úÖ API REST compl√®te")
        print("   ‚úÖ Endpoints DICOM, IA, Reports")
        print("   ‚úÖ Monitoring syst√®me")
        print("   ‚ö†Ô∏è  Base de donn√©es simplifi√©e (SQLite)")
        print("   ‚ö†Ô∏è  Serveur DICOM simul√© (sans pynetdicom)")
        
        print("\nüöÄ D√©marrage du serveur...")
        print("   Arr√™t avec Ctrl+C")
        print("=" * 50)
        
        # Lancement du serveur sans reload pour √©viter les probl√®mes Windows
        uvicorn.run(
            "src.api.main:app",
            host="127.0.0.1",
            port=8000,
            reload=False,
            log_level="info"
        )
        
    except ImportError as e:
        print(f"‚ùå Erreur d'import: {e}")
        print("\nüí° Solutions:")
        print("   pip install fastapi uvicorn python-dotenv")
        print("   ou utilisez Docker: docker-compose up")
        
    except KeyboardInterrupt:
        print("\n\nüõë Arr√™t demand√© par l'utilisateur")
        
    except Exception as e:
        print(f"‚ùå Erreur: {e}")
        import traceback
        traceback.print_exc()
        
    finally:
        print("üëã AI PACS arr√™t√©!")
